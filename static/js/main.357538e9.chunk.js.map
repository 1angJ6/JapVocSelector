{"version":3,"sources":["constant/chapter_1.js","components/VocabularyList.js","App.js","reportWebVitals.js","index.js"],"names":["chinese_set_1","VocabularyList","props","updateIndexes","setState","selectedIndexes","randomNums","length","state","chinese_set","jap_set","selectedChapter","arr","ran","i","n","min","max","Math","ceil","random","this","isExist","type","onClick","map","index","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAAIA,G,MAAgB,CAChB,wCACA,wCACA,wCACA,wCACA,wCACA,oDACA,kCACA,wCACA,kCACA,kCACA,8CACA,kCACA,wCACA,kCACA,kCACA,oDACA,kCACA,0DACA,kCACA,wCACA,4BACA,4BACA,8CACA,kFACA,8CACA,8CACA,4BACA,4BACA,4BACA,4BACA,4BACA,kCACA,kCACA,kCACA,kCACA,kCACA,4BACA,kCACA,wCACA,wCACA,kCACA,8CACA,8CACA,gDACA,oDACA,gD,OCgBWC,E,kDAvDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA8BVC,cAAgB,WACZ,EAAKC,SAAS,CAACC,gBAAiB,EAAKC,WAAW,GAAI,EAAGN,EAAcO,WA9BrE,EAAKC,MAAQ,CACTC,YAAa,GACbC,QAAS,GACTL,gBAAiB,EAAKC,WAAW,GAAI,EAAGN,EAAcO,QACtDI,gBAAiB,GANN,E,2CAUnB,SAAQC,EAAKC,GACT,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAIL,OAAQO,IAC5B,GAAIF,EAAIE,KAAOD,EACX,OAAO,EAGf,OAAO,I,wBAGX,SAAWE,EAAGC,EAAKC,GAEf,IADA,IAAIL,EAAM,GACDE,EAAI,EAAGA,EAAIC,EAAGD,IAAK,CAExB,IADA,IAAID,EAAMK,KAAKC,KAAKD,KAAKE,UAAYH,EAAMD,GAAOA,GAC3CK,KAAKC,QAAQV,EAAKC,IACrBA,EAAMK,KAAKC,KAAKD,KAAKE,UAAYH,EAAMD,GAAOA,GAElDJ,EAAIE,GAAKD,EAEb,OAAOD,I,oBAOX,WAEI,OACI,gCACI,cAAC,IAAD,CAAQW,KAAK,UAAUC,QAASH,KAAKlB,cAArC,oBAEIkB,KAAKb,MAAMH,gBAAgBoB,KACvB,SAAAC,GACI,OACI,8BAAM1B,EAAc0B,e,GA9CvBC,IAAMC,WCMpBC,E,4JAPX,WACI,OACI,cAAC,EAAD,Q,GAHMF,IAAMC,WCSTE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.357538e9.chunk.js","sourcesContent":["var chinese_set_1 = [\r\n    \"〔名〕 中国人\",\r\n    \"〔名〕 日本人\",\r\n    \"〔名〕 韩国人\",\r\n    \"〔名〕 美国人\",\r\n    \"〔名〕 法国人\",\r\n    \"〔名〕 （大）学生\",\r\n    \"〔名〕 老师\",\r\n    \"〔名〕 留学生\",\r\n    \"〔名〕 教授\",\r\n    \"〔名〕 职员\",\r\n    \"〔名〕 公司职员\",\r\n    \"〔名〕 店员\",\r\n    \"〔名〕 进修生\",\r\n    \"〔名〕 企业\",\r\n    \"〔名〕 大学\",\r\n    \"〔名〕 （我）父亲\",\r\n    \"〔名〕 科长\",\r\n    \"〔名〕 总经理，社长\",\r\n    \"〔名〕 迎接\",\r\n    \"〔名〕 那个人\",\r\n    \"〔代〕 我\",\r\n    \"〔代〕 你\",\r\n    \"〔副〕 非常，很\",\r\n    \"〔叹〕 哎，是（应答）；是的\",\r\n    \"〔叹〕 不，不是\",\r\n    \"〔叹〕 哎，哎呀\",\r\n    \"〔专〕 李\",\r\n    \"〔专〕 王\",\r\n    \"〔专〕 张\",\r\n    \"〔专〕 森\",\r\n    \"〔专〕 林\",\r\n    \"〔专〕 小野\",\r\n    \"〔专〕 吉田\",\r\n    \"〔专〕 田中\",\r\n    \"〔专〕 中村\",\r\n    \"〔专〕 太郎\",\r\n    \"〔专〕 金\",\r\n    \"〔专〕 迪蓬\",\r\n    \"〔专〕 史密斯\",\r\n    \"〔专〕 约翰逊\",\r\n    \"〔专〕 中国\",\r\n    \"〔专〕 东京大学\",\r\n    \"〔专〕 北京大学\",\r\n    \"〔专〕 JC策划公司\",\r\n    \"〔专〕 北京旅行社\",\r\n    \"〔专〕 日中商社\"\r\n];\r\n\r\nvar jap_set_1 = [\r\n    \"ちゅうごくじん（中国人）\",\r\n    \"にほんじん（日本人）\",\r\n    \"かんこくじん（韓国人）\",\r\n    \"アメリカじん（～人）\",\r\n    \"フランスじん（～人）\",\r\n    \"がくせい（学生）\",\r\n    \"せんせい（先生）\",\r\n    \"りゅうがくせい（留学生）\",\r\n    \"きょうじゅ（教授）\",\r\n    \"しゃいん（社員）\",\r\n    \"かいしゃいん（会社員）\",\r\n    \"てんいん（店員）\",\r\n    \"けんしゅうせい（研修生）\",\r\n    \"きぎょう（企業）\",\r\n    \"だいがく（大学）\",\r\n    \"ちち（父）\",\r\n    \"かちょう（課長）\",\r\n    \"しゃちょう（社長）\",\r\n    \"でむかえ（出迎え）\",\r\n    \"あのひと（あの人）\",\r\n    \"わたし\",\r\n    \"あなた\",\r\n    \"どうも\",\r\n    \"はい\",\r\n    \"いいえ\",\r\n    \"あっ\",\r\n    \"り（李）\",\r\n    \"おう（王）\",\r\n    \"ちょう（張）\",\r\n    \"もり（森）\",\r\n    \"はやし（林）\",\r\n    \"おの（小野）\",\r\n    \"よしだ（吉田）\",\r\n    \"たなか（田中）\",\r\n    \"なかむら（中村）\",\r\n    \"たろう（太郎）\",\r\n    \"キム（金）\",\r\n    \"デュポン\",\r\n    \"スミス\",\r\n    \"ジョンソン\",\r\n    \"ちゅうごく（中国）\",\r\n    \"とうきょうだいがく（東京大学）\",\r\n    \"ペキンだいがく（北京大学）\",\r\n    \"ジェーシーきかく（ＪＣ企画）\",\r\n    \"ペキンりょこうしゃ（北京旅行社\",\r\n    \"にっちゅうしょうじ（日中商事）\"\r\n];\r\n\r\nexport { chinese_set_1, jap_set_1 };","import React from 'react';\r\nimport { Button, Dropdown, Menu } from 'antd';\r\nimport './VocabularyList.css';\r\nimport { chinese_set_1 } from '../constant/chapter_1';\r\n\r\nclass VocabularyList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chinese_set: [],\r\n            jap_set: [],\r\n            selectedIndexes: this.randomNums(10, 0, chinese_set_1.length),\r\n            selectedChapter: 1,\r\n        };\r\n    }\r\n\r\n    isExist(arr, ran) {\r\n        for (var i = 0; i < arr.length; i++) {\r\n            if (arr[i] === ran) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    randomNums(n, min, max) {\r\n        var arr = [];\r\n        for (var i = 0; i < n; i++) {\r\n            var ran = Math.ceil(Math.random() * (max - min) + min);\r\n            while (this.isExist(arr, ran)) {\r\n                ran = Math.ceil(Math.random() * (max - min) + min);\r\n            }\r\n            arr[i] = ran;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    updateIndexes = () => {\r\n        this.setState({selectedIndexes: this.randomNums(10, 0, chinese_set_1.length)});\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Button type=\"primary\" onClick={this.updateIndexes}>Update</Button>\r\n                {\r\n                    this.state.selectedIndexes.map(\r\n                        index => {\r\n                            return (\r\n                                <div>{chinese_set_1[index]}</div>\r\n                            );\r\n                        }\r\n                    )\r\n                }\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default VocabularyList;","import React from 'react';\nimport VocabularyList from './components/VocabularyList';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <VocabularyList/>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}